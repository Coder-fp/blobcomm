{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fredd/vercel-attendance-register/pages/api/sendWebhook.js"],"sourcesContent":["export default async function handler(req, res) {\r\n    if (req.method === \"POST\") {\r\n      try {\r\n        const { userStatus } = req.body;\r\n  \r\n        if (!userStatus || userStatus.length === 0) {\r\n          return res.status(400).json({ error: \"No user status data provided\" });\r\n        }\r\n  \r\n        // Format the user status list as a single string\r\n        const statusList = userStatus\r\n          .map(user => `**${user.name}** â€” ${user.status}`)\r\n          .join(\"\\n\");\r\n  \r\n        // Get current date in dd/mm/yy format\r\n        const now = new Date();\r\n        const day = String(now.getDate()).padStart(2, \"0\");\r\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\r\n        const year = String(now.getFullYear()).slice(-2);\r\n        const formattedDate = `${day}/${month}/${year}`;\r\n  \r\n        const webhookPayload = {\r\n          embeds: [\r\n            {\r\n              title: \"ðŸ“‹ Attendance Register\",\r\n              description: statusList,\r\n              color: 3447003, // Discord blurple\r\n              footer: {\r\n                text: `Submitted on ${formattedDate}`,\r\n              },\r\n            },\r\n          ],\r\n        };\r\n  \r\n        const webhookUrl = process.env.DISCORD_WEBHOOK_URL;\r\n  \r\n        if (!webhookUrl) {\r\n          return res.status(500).json({ error: \"Webhook URL is not set\" });\r\n        }\r\n  \r\n        const response = await fetch(webhookUrl, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(webhookPayload),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error(\"Error sending to Discord:\", errorText);\r\n          return res.status(500).json({ error: `Failed to send webhook: ${errorText}` });\r\n        }\r\n  \r\n        return res.status(200).json({ message: \"Attendance sent successfully!\" });\r\n      } catch (error) {\r\n        console.error(\"Webhook Error:\", error);\r\n        return res.status(500).json({ error: error.message });\r\n      }\r\n    } else {\r\n      return res.status(405).json({ error: \"Method Not Allowed\" });\r\n    }\r\n  }\r\n  "],"names":[],"mappings":";;;AAAe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC1C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,IAAI;YACF,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,IAAI;YAE/B,IAAI,CAAC,cAAc,WAAW,MAAM,KAAK,GAAG;gBAC1C,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAA+B;YACtE;YAEA,iDAAiD;YACjD,MAAM,aAAa,WAChB,GAAG,CAAC,CAAA,OAAQ,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,MAAM,EAAE,EAC/C,IAAI,CAAC;YAER,sCAAsC;YACtC,MAAM,MAAM,IAAI;YAChB,MAAM,MAAM,OAAO,IAAI,OAAO,IAAI,QAAQ,CAAC,GAAG;YAC9C,MAAM,QAAQ,OAAO,IAAI,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG;YACrD,MAAM,OAAO,OAAO,IAAI,WAAW,IAAI,KAAK,CAAC,CAAC;YAC9C,MAAM,gBAAgB,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM;YAE/C,MAAM,iBAAiB;gBACrB,QAAQ;oBACN;wBACE,OAAO;wBACP,aAAa;wBACb,OAAO;wBACP,QAAQ;4BACN,MAAM,CAAC,aAAa,EAAE,eAAe;wBACvC;oBACF;iBACD;YACH;YAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,mBAAmB;YAElD,IAAI,CAAC,YAAY;gBACf,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAAyB;YAChE;YAEA,MAAM,WAAW,MAAM,MAAM,YAAY;gBACvC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO,CAAC,wBAAwB,EAAE,WAAW;gBAAC;YAC9E;YAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAgC;QACzE,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kBAAkB;YAChC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC;QACrD;IACF,OAAO;QACL,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAqB;IAC5D;AACF","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fredd/vercel-attendance-register/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fredd/vercel-attendance-register/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fredd/vercel-attendance-register/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fredd/vercel-attendance-register/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,sHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,sHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}